// Адаптер хранения настроек HTTP сервисов
//  
// BSLLS:NestedFunctionInParameters-off - без лишних переменных выполнение быстрее
// BSLLS:EmptyRegion-off - пустые области разрешены

#Область ПрограммныйИнтерфейс

//
// Интерфейс хранения настроек
// 

// Возвращает настройки сервиса
//
// Параметры: 
// 	Сервис - Строка - Идентификатор сервиса
//
// Возвращаемое значение: 
// 	Соответствие, Неопределено
//
Функция Прочитать(Сервис) Экспорт
	
	Результат	= Неопределено;
	
	#Если Сервер Тогда
		УстановитьПривилегированныйРежим(Истина);
		// BSLLS:IncorrectLineBreak-off - ложное срабатывание
		Результат	= ХранилищеСистемныхНастроек.Загрузить(ХранилищеОбъект()
		, Сервис
		, 
		, ХранилищеПользователь());
		// BSLLS:IncorrectLineBreak-on
	#Иначе 
		СредаВыполненияИсключение();
	#КонецЕсли
	  
	Возврат Результат;
	
КонецФункции // Прочитать 

// Сохраняет настройки сервиса
//
// Параметры: 
// 	Сервис - Строка - Идентификатор сервиса
// 	Настройка - Соответствие - Сохраняемая настройка
//
Процедура Сохранить(Сервис, Настройка) Экспорт
	
	#Если Сервер Тогда
		
		Если НЕ оас_Настройка.АдминистрированиеДоступно() Тогда
			ВызватьИсключение НСтр("ru = 'Недостаточно прав доступа! Доступно только администраторам.'");
		КонецЕсли;
		
		УстановитьПривилегированныйРежим(Истина);
		НачатьТранзакцию();
		Попытка
			// BSLLS:IncorrectLineBreak-off - ложное срабатывание
			ХранилищеСистемныхНастроек.Сохранить(ХранилищеОбъект()
			, Сервис
			, Настройка
			, 
			, ХранилищеПользователь());
			// BSLLS:IncorrectLineBreak-on
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ВызватьИсключение ;
		КонецПопытки;
	#Иначе
		СредаВыполненияИсключение();
	#КонецЕсли
	
КонецПроцедуры // Сохранить 

// 
// Общий интерфейс адаптеров
// 

// Возвращает параметры адаптера по-умолчанию
// 
// Параметры: 
// 
// Возвращаемое значение: 
// 	Соответствие
// 
Функция ПараметрыУмолчание() Экспорт
	
	Результат	= Новый Соответствие();
	
	Возврат Результат;
	
КонецФункции // ПараметрыУмолчание 

// Инициализация адаптера
// 
// Параметры: 
// 	Регион - Строка - Регион использования адаптеров
// 	Параметры - Соответствие - Сохраненные параметры
// 
Процедура Инициализировать(Регион, Параметры) Экспорт
	
КонецПроцедуры // Инициализировать 

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Вызывает исключение неподходящей среды выполнения
//
// Параметры: 
//
Процедура СредаВыполненияИсключение()
	
	ВызватьИсключение НСтр("ru = 'Недопустимая среда выполнения " + оас_Модуль.ом_СредаВыполнения().Представление() + "'");
	
КонецПроцедуры // СредаВыполненияИсключение 

//
// Ключи хранилища настроек
// 

// Возвращает объект хранилища
//
// Параметры: 
//
// Возвращаемое значение: 
// 	Строка
//
Функция ХранилищеОбъект()
	
	Возврат "e3e158b4-d883-49b9-8eb7-a72e6a747ad3";
	
КонецФункции // ХранилищеОбъект 

// Возвращает пользователя хранилища
//
// Параметры: 
//
// Возвращаемое значение: 
// 	Строка
//
Функция ХранилищеПользователь()
	
	Возврат "6241c4c8-0c50-4f54-9d49-615cbb9de38f";
	
КонецФункции // ХранилищеПользователь 

#КонецОбласти

// BSLLS:EmptyRegion-on 
// BSLLS:NestedFunctionInParameters-on
