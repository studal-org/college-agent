// @strict-types

#Область ПрограммныйИнтерфейс
// Получить.
// 
// Параметры:
//  УИД - УникальныйИдентификатор
// 
// Возвращаемое значение:
//  - СправочникСсылка.Пользователи
//  - Неопределено
Функция Получить(УИД) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ГруппыДоступаПользователи.Пользователь КАК Пользователь
	|ИЗ
	|	Справочник.ГруппыДоступа.Пользователи КАК ГруппыДоступаПользователи
	|ГДЕ
	|	ГруппыДоступаПользователи.Ссылка = ЗНАЧЕНИЕ(Справочник.ГруппыДоступа.Администраторы)
	|	И УНИКАЛЬНЫЙИДЕНТИФИКАТОР(ГруппыДоступаПользователи.Пользователь) = &УИД";
	
	Запрос.УстановитьПараметр("УИД", УИД);
	
	РезультатЗапроса = Запрос.Выполнить();

	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;

	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	//@skip-check property-return-type
	Возврат Выборка.Пользователь;
КонецФункции

// Полчить по физическому лицу.
// 
// Параметры:
//  ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
// 
// Возвращаемое значение:
//  - СправочникСсылка.Пользователи
//  - Неопределено
Функция ПолчитьПоФизическомуЛицу(ФизическоеЛицо) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ГруппыДоступаПользователи.Пользователь КАК Пользователь
	|ИЗ
	|	Справочник.ГруппыДоступа.Пользователи КАК ГруппыДоступаПользователи
	|ГДЕ
	|	ГруппыДоступаПользователи.Ссылка = ЗНАЧЕНИЕ(Справочник.ГруппыДоступа.Администраторы)
	|	И ГруппыДоступаПользователи.Пользователь.ФизическоеЛицо = &ФизическоеЛицо";
	
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	
	РезультатЗапроса = Запрос.Выполнить();

	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;

	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	//@skip-check property-return-type
	Возврат Выборка.Пользователь;
КонецФункции
#КонецОбласти