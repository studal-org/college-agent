// BSLLS:CommonModuleInvalidType-off - тип модуля верен, может вызываться только в серверном контексте
// 
// HTTP Методы
//  

#Область ПрограммныйИнтерфейс

// Возвращает массив доступных методов
//
// Параметры: 
//
// Возвращаемое значение: 
// 	Массив
//
Функция ДоступныеМассив() Экспорт
	
	Результат	= Новый Массив(8);
	
	Результат[0]	= GETИмя();
	Результат[1]	= PUTИмя();
	Результат[2]	= POSTИмя();
	Результат[3]	= DELETEИмя();
	Результат[4]	= OPTIONSИмя();
	Результат[5]	= HEADИмя();
	Результат[6]	= PATCHИмя();
	Результат[7]	= TRACEИмя();
	
	Возврат Новый ФиксированныйМассив(Результат);
	
КонецФункции // ДоступныеКоллекция 

// Истина, если имя типа  POST
//
// Параметры: 
//	Имя - Строка - Имя метода 
//
// Возвращаемое значение: 
//	Булево
//
Функция POSTЭто(Имя) Экспорт 
	
	Возврат Имя = POSTИмя();
	
КонецФункции // POSTЭто 

// Возвращает имя  POST
//
// Параметры: 
//
// Возвращаемое значение: 
//	Строка
//
Функция POSTИмя() Экспорт 
	
	Возврат "POST";
	
КонецФункции // POSTИмя 

// Истина, если имя типа запроса GET
//
// Параметры: 
//	Имя - Строка - Имя метода
//
// Возвращаемое значение: 
//	Булево
//
Функция GETЭто(Имя) Экспорт 
	
	Возврат Имя = GETИмя();
	
КонецФункции // GETЭто 

// Возвращает имя типа запроса GET
//
// Параметры: 
//
// Возвращаемое значение: 
//	Строка
//
Функция GETИмя() Экспорт 
	
	Возврат "GET";
	
КонецФункции // GETИмя 

// Истина, если имя типа запроса PUT
//
// Параметры: 
//	Имя - Строка - Имя метода
//
// Возвращаемое значение: 
//	Булево
//
Функция PUTЭто(Имя) Экспорт 
	
	Возврат Имя = PUTИмя();
	
КонецФункции // PUTЭто 

// Возвращает имя типа запроса PUT
//
// Параметры: 
//
// Возвращаемое значение: 
//	Строка
//
Функция PUTИмя() Экспорт 
	
	Возврат "PUT";
	
КонецФункции // PUTИмя 

// Истина, если имя типа запроса DELETE
//
// Параметры: 
//	Имя - Строка - Имя метода
//
// Возвращаемое значение: 
//	Булево
//
Функция DELETEЭто(Имя) Экспорт 
	
	Возврат Имя = DELETEИмя();
	
КонецФункции // DELETEЭто 

// Возвращает имя типа запроса DELETE
//
// Параметры: 
//
// Возвращаемое значение: 
//	Строка
//
Функция DELETEИмя() Экспорт 
	
	Возврат "DELETE";
	
КонецФункции // DELETEИмя 

// Истина, если имя типа запроса PATCH
//
// Параметры: 
//	Имя - Строка - Имя метода
//
// Возвращаемое значение: 
//	Булево
//
Функция PATCHЭто(Имя) Экспорт 
	
	Возврат Имя = PATCHИмя();
	
КонецФункции // PATCHЭто 

// Возвращает имя типа запроса PATCH
//
// Параметры: 
//
// Возвращаемое значение: 
//	Строка
//
Функция PATCHИмя() Экспорт 
	
	Возврат "PATCH";
	
КонецФункции // PATCHИмя 

// Истина, если имя типа запроса MERGE
//
// Параметры: 
//	Имя - Строка - Имя метода
//
// Возвращаемое значение: 
//	Булево
//
Функция MERGEЭто(Имя) Экспорт 
	
	Возврат Имя = MERGEИмя();
	
КонецФункции // MERGEЭто 

// Возвращает имя типа запроса MERGE
//
// Параметры: 
//
// Возвращаемое значение: 
//	Строка
//
Функция MERGEИмя() Экспорт 
	
	Возврат "MERGE";
	
КонецФункции // MERGEИмя 

// Истина, если имя типа запроса OPTIONS
//
// Параметры: 
//	Имя - Строка - Имя метода
//
// Возвращаемое значение: 
//	Булево
//
Функция OPTIONSЭто(Имя) Экспорт 
	
	Возврат Имя = OPTIONSИмя();
	
КонецФункции // OPTIONSЭто 

// Возвращает имя типа запроса OPTIONS
//
// Параметры: 
//
// Возвращаемое значение: 
//	Строка
//
Функция OPTIONSИмя() Экспорт 
	
	Возврат "OPTIONS";
	
КонецФункции // OPTIONSИмя 

// Истина, если имя типа запроса HEAD
//
// Параметры: 
//	Имя - Строка - Имя метода
//
// Возвращаемое значение: 
//	Булево
//
Функция HEADЭто(Имя) Экспорт 
	
	Возврат Имя = HEADИмя();
	
КонецФункции // HEADЭто 

// Возвращает имя типа запроса HEAD
//
// Параметры: 
//
// Возвращаемое значение: 
// 	Строка
//
Функция HEADИмя() Экспорт
	
	Возврат "HEAD";
	
КонецФункции // HEADИмя 

// Истина, если имя типа запроса TRACE
//
// Параметры: 
//	Имя - Строка - Имя метода
//
// Возвращаемое значение: 
//	Булево
//
Функция TRACEЭто(Имя) Экспорт 
	
	Возврат Имя = TRACEИмя();
	
КонецФункции // TRACEЭто 

// Возвращает имя типа запроса TRACE
//
// Параметры: 
//
// Возвращаемое значение: 
//	Строка
//
Функция TRACEИмя() Экспорт 
	
	Возврат "TRACE";
	
КонецФункции // TRACEИмя 

// Истина, если имя типа запроса CONNECT
//
// Параметры: 
//	Имя - Строка - Имя метода
//
// Возвращаемое значение: 
//	Булево
//
Функция CONNECTЭто(Имя) Экспорт 
	
	Возврат Имя = CONNECTИмя();
	
КонецФункции // CONNECTЭто 

// Возвращает имя типа запроса CONNECT
//
// Параметры: 
//
// Возвращаемое значение: 
//	Строка
//
Функция CONNECTИмя() Экспорт 
	
	Возврат "CONNECT";
	
КонецФункции // CONNECTИмя 

// Истина, если имя типа запроса PROPFIND
//
// Параметры: 
//	Имя - Строка - Имя метода
//
// Возвращаемое значение: 
//	Булево
//
Функция PROPFINDЭто(Имя) Экспорт 
	
	Возврат Имя = PROPFINDИмя();
	
КонецФункции // PROPFINDЭто 

// Возвращает имя типа запроса PROPFIND
//
// Параметры: 
//
// Возвращаемое значение: 
//	Строка
//
Функция PROPFINDИмя() Экспорт 
	
	Возврат "PROPFIND";
	
КонецФункции // PROPFINDИмя 

// Истина, если имя типа запроса PROPPATCH
//
// Параметры: 
//	Имя - Строка - Имя метода
//
// Возвращаемое значение: 
//	Булево
//
Функция PROPPATCHЭто(Имя) Экспорт 
	
	Возврат Имя = PROPPATCHИмя();
	
КонецФункции // PROPPATCHЭто 

// Возвращает имя типа запроса PROPPATCH
//
// Параметры: 
//
// Возвращаемое значение: 
//	Строка
//
Функция PROPPATCHИмя() Экспорт 
	
	Возврат "PROPPATCH";
	
КонецФункции // PROPPATCHИмя 

// Истина, если имя типа запроса MOVE
//
// Параметры: 
//	Имя - Строка - Имя метода
//
// Возвращаемое значение: 
//	Булево
//
Функция MOVEЭто(Имя) Экспорт 
	
	Возврат Имя = MOVEИмя();
	
КонецФункции // MOVEЭто 

// Возвращает имя типа запроса MOVE
//
// Параметры: 
//
// Возвращаемое значение: 
//	Строка
//
Функция MOVEИмя() Экспорт 
	
	Возврат "MOVE";
	
КонецФункции // MOVEИмя 

// Истина, если имя типа запроса COPY
//
// Параметры: 
//	Имя - Строка - Имя метода
//
// Возвращаемое значение: 
//	Булево
//
Функция COPYЭто(Имя) Экспорт 
	
	Возврат Имя = COPYИмя();
	
КонецФункции // COPYЭто 

// Возвращает имя типа запроса PUT
//
// Параметры: 
//
// Возвращаемое значение: 
//	Строка
//
Функция COPYИмя() Экспорт 
	
	Возврат "COPY";
	
КонецФункции // COPYИмя 

// Истина, если имя типа запроса LOCK
//
// Параметры: 
//	Имя - Строка - Имя метода
//
// Возвращаемое значение: 
//	Булево
//
Функция LOCKЭто(Имя) Экспорт 
	
	Возврат Имя = LOCKИмя();
	
КонецФункции // LOCKЭто 

// Возвращает имя типа запроса LOCK
//
// Параметры: 
//
// Возвращаемое значение: 
//	Строка
//
Функция LOCKИмя() Экспорт 
	
	Возврат "LOCK";
	
КонецФункции // LOCKИмя 

// Истина, если имя типа запроса UNLOCK
//
// Параметры: 
//	Имя - Строка - Имя метода
//
// Возвращаемое значение: 
//	Булево
//
Функция UNLOCKЭто(Имя) Экспорт 
	
	Возврат Имя = UNLOCKИмя();
	
КонецФункции // UNLOCKЭто 

// Возвращает имя типа запроса UNLOCK
//
// Параметры: 
//
// Возвращаемое значение: 
//	Строка
//
Функция UNLOCKИмя() Экспорт 
	
	Возврат "UNLOCK";
	
КонецФункции // UNLOCKИмя 

// Истина, если имя типа запроса MKCOL
//
// Параметры: 
//	Имя - Строка - Имя метода
//
// Возвращаемое значение: 
//	Булево
//
Функция MKCOLЭто(Имя) Экспорт 
	
	Возврат Имя = MKCOLИмя();
	
КонецФункции // MKCOLЭто 

// Возвращает имя типа запроса MKCOL
//
// Параметры: 
//
// Возвращаемое значение: 
//	Строка
//
Функция MKCOLИмя() Экспорт 
	
	Возврат "MKCOL";
	
КонецФункции // MKCOLИмя 

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти

// BSLLS:CommonModuleInvalidType-on
