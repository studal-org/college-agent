// @strict-types
#Область ПрограммныйИнтерфейс

// Генерировать функции ответов.
// 
// Параметры:
//  Ответы - см. оас_Спецификация_1.ResponsesObject
// Возвращаемое значение:
//  Структура:
//  	*ТекстФункцийОпределений - Строка
//  	*ТекстФункцийОтветов - Строка
Функция ГенерироватьФункцииОтветов(Ответы) Экспорт
	Результат = Новый Структура;
	Результат.Вставить("ТекстФункцийОпределений", "");
	Результат.Вставить("ТекстФункцийОтветов", "");

	Для Каждого Ответ Из Ответы Цикл
		КодОтвета = Ответ.Ключ;
		Определение = Ответ.Значение; // см. оас_Спецификация_1.ResponseObject

		Если Определение.Свойство("content") И Определение.content <> Неопределено Тогда
			Content = Определение.content; // см. оас_Спецификация_1.ResponseObject_Content
			Для Каждого Вариант Из Content Цикл
				MimeТип = Вариант.Ключ;
				MediaType = Вариант.Значение;

				Если Не MediaType.Свойство("schema") И MediaType.schema = Неопределено Тогда
					ВызватьИсключение "Неопределена схема тела";
				КонецЕсли;

				Схема = MediaType.schema; // см. оас_Спецификация_1.SchemaObject

				ИмяФункции = "Ответ_" + КодОтвета + "_" + СтрЗаменитьПоРегулярномуВыражению(MimeТип,
					"[^A-Za-zА-Яа-я0-9_]", "_");

				ИмяФункцииОпределений = "_" + ИмяФункции + "_Определения";

				Определения = Новый Соответствие;
				ТипТела = оас_Схема.ГенераторТипаСхемы(Схема, Определения, ИмяФункцииОпределений + ".Ответ");

				ПараметрыФункцииОпределений = оас_Утилиты_КлиентСервер.ПараметрыОпределений(Определения, ИмяФункцииОпределений + ".");

				ОпределенияПараметров = оас_Утилиты_КлиентСервер.СтрДобавитьОтступДляКаждойСтроки(
					ПараметрыФункцииОпределений.Определения, "//" + Символы.Таб);

				ТекстФункцииОпределений = ШаблонФункцииОпределений();

				ТекстФункцииОпределений = СтрЗаменить(ТекстФункцииОпределений, "{ОпределенияПараметров}",
					ОпределенияПараметров);
				ТекстФункцииОпределений = СтрЗаменить(ТекстФункцииОпределений, "{ИмяФункции}", ИмяФункцииОпределений);
				ТекстФункцииОпределений = СтрЗаменить(ТекстФункцииОпределений, "{Параметры}",
					ПараметрыФункцииОпределений.Параметры);
					
				Результат.ТекстФункцийОпределений = Результат.ТекстФункцийОпределений + ТекстФункцииОпределений + Символы.ПС;

				ТекстФункции = ШаблонФункцииОтветаСТелом();

				ТекстФункции = СтрЗаменить(ТекстФункции, "{ТипТела}", ТипТела);
				ТекстФункции = СтрЗаменить(ТекстФункции, "{ИмяФункции}", ИмяФункции);
				ТекстФункции = СтрЗаменить(ТекстФункции, "{КодОтвета}", КодОтвета);

			КонецЦикла;
		Иначе
			ИмяФункции = "Ответ_" + КодОтвета;
			ТекстФункции = ШаблонФункцииОтвета();
			ТекстФункции = СтрЗаменить(ТекстФункции, "{ИмяФункции}", ИмяФункции);
			ТекстФункции = СтрЗаменить(ТекстФункции, "{КодОтвета}", КодОтвета);
		КонецЕсли;

		Результат.ТекстФункцийОтветов = Результат.ТекстФункцийОтветов + ТекстФункции + Символы.ПС;

	КонецЦикла;

	Возврат Результат;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Шаблон функции ответа с телом.
// 
// Возвращаемое значение:
//  Строка
Функция ШаблонФункцииОтветаСТелом()
	Таб = Символы.Таб;
	Результат =
	"// Параметры:
	|//{Таб}Тело - {ТипТела}
	|//
	|// Возвращаемое значение:
	|//{Таб}HTTPСервисОтвет
	|Функция {ИмяФункции}(Тело)
	|{Таб}КодОтвета = {КодОтвета};
	|{Таб}Ответ = Новый HTTPСервисОтвет(КодОтвета);
	|
	|{Таб}// Вставьте сюда логику обработки тела ответа
	|
	|{Таб}ТелоСтрокой = """";
	|{Таб}Ответ.УстановитьТелоИзСтроки(ТелоСтрокой);
	|
	|{Таб}Возврат Ответ;
	|КонецФункции";
	Результат = СтрЗаменить(Результат, "{Таб}", Таб);
	Возврат Результат;
КонецФункции

// Шаблон функции ответа.
// 
// Возвращаемое значение:
//  Строка
Функция ШаблонФункцииОтвета()
	Таб = Символы.Таб;
	Результат =
	"// Возвращаемое значение:
	|//{Таб}HTTPСервисОтвет
	|Функция {ИмяФункции}()
	|{Таб}КодОтвета = {КодОтвета};
	|{Таб}Ответ = Новый HTTPСервисОтвет(КодОтвета);
	|
	|{Таб}Возврат Ответ;
	|КонецФункции";
	Результат = СтрЗаменить(Результат, "{Таб}", Таб);
	Возврат Результат;
КонецФункции

Функция ШаблонФункцииОпределений()
	Таб = Символы.Таб;
	Результат =
	"//@skip-check module-unused-method
	|// Параметры:
	|{ОпределенияПараметров}
	|// Возвращаемое значение:
	|//{Таб}Неопределено
	|Функция {ИмяФункции}({Параметры})
	|{Таб}оас_Утилиты_КлиентСервер.ОшибкаТолькоДляОпределения();
	|{Таб}Возврат Неопределено;
	|КонецФункции";
	Результат = СтрЗаменить(Результат, "{Таб}", Таб);
	Возврат Результат;
КонецФункции

#КонецОбласти