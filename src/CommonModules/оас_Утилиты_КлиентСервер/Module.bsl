#Область ПрограммныйИнтерфейс

// Стр со строки по строку.
// 
// Параметры:
//  Строка - Строка
//  Начало - Число
//  Конец - Число
// 
// Возвращаемое значение:
//  Строка
Функция СтрСоСтрокиПоСтроку(Строка, Начало, Конец) Экспорт
	ЧислоСтрок = СтрЧислоСтрок(Строка);
	Конец = ?(Конец = -1, ЧислоСтрок, Конец);

	Если Конец < Начало Или Начало > ЧислоСтрок Или Конец > ЧислоСтрок Тогда
		Возврат "";
	КонецЕсли;

	НачалоСтрока = СтрПолучитьСтроку(Строка, Начало);
	НачалоПозиция = СтрНайти(Строка, НачалоСтрока);

	КонецСтрока = СтрПолучитьСтроку(Строка, Конец);
	КонецПозиция = СтрНайти(Строка, КонецСтрока) + СтрДлина(КонецСтрока);

	Возврат Сред(Строка, НачалоПозиция, КонецПозиция - НачалоПозиция);
КонецФункции

// Добавить отступ для каждой строки.
// 
// Параметры:
//  Строка - Строка
//  Отступ - Строка
// 
// Возвращаемое значение:
//  Строка
Функция СтрДобавитьОтступДляКаждойСтроки(Строка, Отступ) Экспорт
	Результат = "";
	ЧислоСтрок = СтрЧислоСтрок(Строка);
	Для НомерСтроки = 1 По ЧислоСтрок Цикл
		Результат = Результат + Отступ + СтрПолучитьСтроку(Строка, НомерСтроки);
		Если НомерСтроки <> ЧислоСтрок Тогда
			Результат = Результат + Символы.ПС;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции

// Вызывает исключение для сообщения о том что
// Процедура или Функция существует только для определения типа.
Процедура ОшибкаТолькоДляОпределения() Экспорт
	ВызватьИсключение "Процедура или Функция существует только для определения типа.";
КонецПроцедуры

// Параметры определений.
// 
// Параметры:
//  Определения - Соответствие из КлючИЗначение:
//  	*Ключ - Строка
//  	*Значение - Строка
// 	Корень - Строка
// Возвращаемое значение:
//  Структура:
//  	*Параметры - Строка
//  	*Определения - Строка
Функция ПараметрыОпределений(Определения, Корень) Экспорт
	Результат = Новый Структура;
	Результат.Вставить("Параметры", "");
	Результат.Вставить("Определения", "");
	ПараметрыРазделитель = ", ";
	ОпределенияРазделитель = Символы.ПС;
	Для Каждого Определение Из Определения Цикл
		ИмяПараметра = СтрЗаменить(Определение.Ключ, Корень, "");
		Результат.Параметры = Результат.Параметры + ИмяПараметра + ПараметрыРазделитель;
		Результат.Определения = Результат.Определения + ИмяПараметра + " - " + Определение.Значение + ?(Прав(
			Определение.Значение, СтрДлина(ОпределенияРазделитель)) <> ОпределенияРазделитель, ОпределенияРазделитель,
			"");
	КонецЦикла;
	Результат.Параметры = Лев(Результат.Параметры, СтрДлина(Результат.Параметры) - СтрДлина(ПараметрыРазделитель));
	Результат.Определения = Лев(Результат.Определения, СтрДлина(Результат.Определения) - СтрДлина(
		ОпределенияРазделитель));
	Возврат Результат;
КонецФункции

// Получить структуру из соответствия.
// 
// Параметры:
//  ЗначВход - Соответствие из КлючИЗначение -:
//  	*Ключ - Строка
//  	*Значение - Произвольный
// 
// Возвращаемое значение:
//  Структура
Функция ПолучитьСтруктуруИзСоответствия(ЗначВход) Экспорт
	СтруктураВозврат = Новый Структура;

	Для Каждого Элемент Из ЗначВход Цикл
		Попытка
			СтруктураВозврат.Вставить(Элемент.Ключ, Элемент.Значение);
		Исключение
			Продолжить;
		КонецПопытки;
	КонецЦикла;

	Возврат СтруктураВозврат;
КонецФункции

#КонецОбласти