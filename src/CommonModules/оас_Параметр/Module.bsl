// BSLLS:CommonModuleInvalidType-off - тип модуля верен, может вызываться только в серверном контексте
// 
// Параметр запроса в настройках
//  

#Область ПрограммныйИнтерфейс

// Возвращает параметр запроса по правилам спецификации
//
// Параметры: 
// 	Правила - Соответствие - Правила спецификации
//
// Возвращаемое значение: 
// 	Соответствие
//
Функция Создать(Правила) Экспорт
	
	Результат	= Новый Соответствие();
	
	Булево		= оас_Модуль.ом_ОписаниеТипов().Создать("Булево");
	Результат.Вставить(СвойствоИмяИмя(), Правила.Получить("name"));
	Результат.Вставить(СвойствоРазмещениеИмя(), Правила.Получить("in"));
	РесурсЭто	= оас_ПараметрРазмещение.РесурсЭто(Результат["Размещение"]);
	Результат.Вставить(СвойствоОбязательныйИмя()
	, ?(РесурсЭто
	, Истина
	, Булево.ПривестиЗначение(Правила.Получить("required"))));
	Результат.Вставить(СвойствоЧислоЭтоИмя(), оас_Тип.ЧислоЭто(Правила));
	
	Возврат Новый ФиксированноеСоответствие(Результат);
	
КонецФункции // Создать 

// Возвращает коллекцию параметров узла
//
// Параметры: 
// 	Правила - Соответствие - Правила узла
//
// Возвращаемое значение: 
// 	Соответствие
//
Функция Коллекция(Правила) Экспорт
	
	Результат	= Новый Соответствие();
	
	Параметры	= Правила.Получить("parameters");
	Если оас_Модуль.ом_Значение().МассивЭто(Параметры) Тогда
		Для Каждого Элемент Из Параметры Цикл
			Параметр	= оас_Параметр.Создать(Элемент);
			Результат.Вставить(оас_Параметр.Имя(Параметр), Параметр);
		КонецЦикла;
	КонецЕсли;
	
	Возврат Новый ФиксированноеСоответствие(Результат);
	
КонецФункции // Коллекция 

// Возвращает имя параметра
//
// Параметры: 
// 	Параметр - Соответствие - Параметр правил
//
// Возвращаемое значение: 
// 	Строка
//
Функция Имя(Параметр) Экспорт
	
	Возврат Параметр[СвойствоИмяИмя()];
	
КонецФункции // Имя 

// Возвращает размещение параметра
//
// Параметры: 
// 	Параметр - Соответствие - Параметр правил
//
// Возвращаемое значение: 
// 	Строка
//
Функция Размещение(Параметр) Экспорт
	
	Возврат Параметр[СвойствоРазмещениеИмя()];
	
КонецФункции // Размещение 

// Возвращает принадлежность параметра к числам
//
// Параметры: 
// 	Параметр - Соответствие - Параметр правил
//
// Возвращаемое значение: 
// 	Булево
//
Функция ЧислоЭто(Параметр) Экспорт
	
	Возврат Параметр[СвойствоЧислоЭтоИмя()];
	
КонецФункции // ЧислоЭто 

// Возвращает обязательность параметра
//
// Параметры: 
// 	Параметр - Соответствие - Параметр правил
//
// Возвращаемое значение: 
// 	Булево
//
Функция Обязательный(Параметр) Экспорт
	
	Возврат Параметр[СвойствоОбязательныйИмя()];
	
КонецФункции // Обязательный 

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает имя свойства Имя
//
// Параметры: 
//
// Возвращаемое значение: 
// 	Строка
//
Функция СвойствоИмяИмя()
	
	Возврат "Имя";
	
КонецФункции // СвойствоИмяИмя 

// Возвращает имя свойства Размещение
//
// Параметры: 
//
// Возвращаемое значение: 
// 	Строка
//
Функция СвойствоРазмещениеИмя()
	
	Возврат "Размещение";
	
КонецФункции // СвойствоРазмещениеИмя 

// Возвращает имя свойства Обязательный
//
// Параметры: 
//
// Возвращаемое значение: 
// 	Строка
//
Функция СвойствоОбязательныйИмя()
	
	Возврат "Обязательный";
	
КонецФункции // СвойствоОбязательныйИмя 

// Возвращает имя свойства ЧислоЭто
//
// Параметры: 
//
// Возвращаемое значение: 
// 	Строка
//
Функция СвойствоЧислоЭтоИмя()
	
	Возврат "ЧислоЭто";
	
КонецФункции // СвойствоЧислоЭтоИмя 

#КонецОбласти

// BSLLS:CommonModuleInvalidType-on
